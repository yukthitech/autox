<testData xmlns:s="http://autox.yukthitech.com/steps" xmlns:wrap="http://xmlbeanparser.yukthitech.com/wrap">
	<testSuite name="ml-ui-sessions" parallelExecutionEnabled="true">
		<testCase name="button_Click">
			<description>
				Clicks the button and notes the reaction
			</description>
			
			<s:ui-goto-page uri="/index.html" />
			<s:ui-is-visible locator="id: testLayer" name="visibFlag1"/>
			
			<s:ui-click locator="id: button"/>
			<s:sleep time="1000"/>
			
			<s:ui-log-screen-shot name="test.png" />
			
			<s:ui-get-value locator="xpath: //input[@name='statusFld']" name="fldValue"/>
			<s:ui-assert-value locator="xpath: //input[@name='statusFld']" value="button Clicked"/>
		</testCase>

		<testCase name="testByJs">
			<description>
				Clicks the button using js and notes the result.
			</description>
			
			<s:ui-goto-page uri="/index.html" />

			<s:ui-execute-js>
				<script>
					document.getElementById("changeByJs").click()
				</script>
			</s:ui-execute-js>
			<s:sleep time="2000"/>
			
			<s:ui-log-screen-shot name="test-js.png" />
			<s:ui-assert-value locator="xpath: //input[@name='statusFld']" value="Changed By Js"/>
			
		</testCase>

		<testCase name="alert_test">
			<description>
				Used to validate alert boxes.
			</description>
			
			<s:ui-goto-page uri="/index.html" />
			
			<s:ui-click locator="id: alertBut"/>
			<s:sleep time="1000"/>
			
			<s:ui-handle-alert expectedMessage="Test Alert Message!!!"/>
		</testCase>

		<testCase name="confirm_test">
			<description>
				Used to validate confirm box.
			</description>

			<s:ui-goto-page uri="/index.html" />

			<s:ui-click locator="id: confirmBut"/>
			<s:sleep time="1000"/>
			
			<s:ui-handle-confirm expectedMessage="Choose your button..." accept="true"/>
			<s:assert-equals actual="${uiValue('id:alertRes', null)}" expected="Okay"/>

			<!-- Now validate the prompt box -->
			<s:ui-click locator="id: promptBut"/>
			<s:sleep time="100"/>
			
			<s:ui-handle-prompt expectedMessage="Provide a value..." accept="true" text="Kranthi"/>
			<s:assert-equals actual="${uiValue('id:alertRes', null)}" expected="Kranthi"/>
		</testCase>

		<testCase name="prompt_test">
			<description>
				Used to validate prompt box.
			</description>

			<s:ui-goto-page uri="/index.html" />

			<s:ui-click locator="id: promptBut"/>
			<s:sleep time="1000"/>
			
			<s:ui-handle-prompt expectedMessage="Provide a value..." accept="true" text="Kranthi"/>
			<s:sleep time="1000"/>
			<s:assert-equals actual="${uiValue('id:alertRes', null)}" expected="Kranthi"/>
		</testCase>

		<testCase name="click_post_check">
			<description>
				Validates post check of click functionality is working as expected.
			</description>
			
			<s:ui-goto-page uri="/index.html" />
			<s:ui-click locator="id: clickButton1" postVisibilityLocator="id: clickButton1Res"/>
			
			<s:ui-assert-visibility locator="id: clickButton1Res"/>
			<s:ui-log-screen-shot name="post-visible-check.png" />
		</testCase>

		<testCase name="setHiddentFieldValue">
			<description>Validates setting non visible field value is working</description>
			
			<wrap:steps>
				<s:ui-goto-page uri="/index.html" />
				<s:ui-set-value locator="id: hiddenFld" value="newValue"/>
				
				<s:ui-click locator="id: hidButton"/>
				<s:sleep time="1000"/>
				
				<s:ui-log-screen-shot name="test.png" />
				<s:ui-get-value locator="xpath: //input[@name='statusFld']" name="fldValue"/>
			</wrap:steps>
	
			<wrap:validations>
				<s:assert-equals actual="attr: fldValue" expected="newValue"/>
			</wrap:validations>
		</testCase>

		<testCase name="fillForm">
			<description>Validates form filling is working</description>
			
			<s:ui-goto-page uri="/form.html" />

			<s:ui-fill-form locator="id:sampleForm">
				<data>
					{
						"name": "kranthi",
						"id:genderDropDown": "male",
						"address": "line1\nline2",
						"color": ["red", "green", "blue"]
					}
				</data>
			</s:ui-fill-form>
			
			<s:ui-log-screen-shot name="filledForm.png" />
							
			<s:ui-assert-value locator="xpath: //input[@name='name']" value="kranthi"/>
		</testCase>

		<testCase name="videoRecording">
			<description>Validates video generation</description>
			
			<s:record-video name="form-filling">
				<s:ui-goto-page uri="/form.html" />
	
				<s:ui-fill-form locator="id:sampleForm">
					<data>
						{
							"name": "kranthi",
							"id:genderDropDown": "male",
							"address": "line1\nline2",
							"color": ["red", "green", "blue"]
						}
					</data>
				</s:ui-fill-form>
				<s:ui-assert-value locator="xpath: //input[@name='name']" value="kranthi"/>
			</s:record-video>
			
			<s:ui-log-screen-shot name="filledForm.png" />
		</testCase>

		<testCase name="uiGetElements">
			<description>Validates get elements is working</description>
			
			<s:ui-goto-page uri="/form.html" />
			
			<s:ui-get-elements locator="xpath: //input[@type='checkbox']" name="checkBoxes"/>
			
			<s:set expression="values" value=""/>
			
			<s:forEach expression="attr: checkBoxes" loopVar="cbox">
				<s:set expression="values" value="${attr.values},${uiElemAttr('value', attr.cbox, null)}"/>
			</s:forEach>

			<s:assert-equals actual="attr: values" expected=",red,green,blue,yellow,orange"/>
		</testCase>

		<testCase name="uiMethods">
			<description>Validates functionality of free marker methods</description>
			
			<s:ui-goto-page uri="/form.html" />
			
			<s:set expression="result" value="false"/>
			<s:set expression="locator" value="string: xpath: //input[@type='checkbox']"/>
			
			<s:assert-true value="condition: uiIsVisible(attr.locator, null)"/>
		</testCase>

		<testCase name="testDownload" group="download">
			<description>Validates download functionality</description>
			
			<s:ui-goto-page uri="/form.html" />
			
			<s:ui-clickAndDownload locator="id: downloadLink" pathName="filePath"/>
						
			<s:assert-file-exists path="${attr.filePath}"/>
		</testCase>

		<testCase name="testOpenWindow">
			<description>Validates download functionality</description>
			
			<s:ui-goto-page uri="/form.html" />
			<s:ui-open-window url="/index.html" name="Index"/>
			<s:ui-is-visible locator="id: button" name="visibFlag1"/>
			
			<s:sleep time="5000"/>
			
			<!-- Ensure switch windows is working fine -->
			<s:ui-switch-window />
			<s:ui-assert-visibility locator="id: downloadLink"/>
			<s:sleep time="5000"/>
			
			<s:ui-switch-window locator="Index"/>
			<s:ui-is-visible locator="id: button" name="visibFlag1"/>
			<s:assert-true value="attr: visibFlag1"/>
			
			<!-- 
				Ensure window close is working
				Close sub window and ensure main window is still accessible 
			-->
			<s:ui-close-window name="Index"/>
						
			<s:ui-switch-window />
			<s:ui-assert-visibility locator="id: downloadLink"/>
		</testCase>

		<cleanup>
			<s:ui-quit-session/>
		</cleanup>
	</testSuite>
	
</testData>