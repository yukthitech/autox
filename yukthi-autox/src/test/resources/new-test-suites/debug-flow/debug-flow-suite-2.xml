<testData xmlns:s="http://autox.yukthitech.com/steps" xmlns:wrap="http://xmlbeanparser.yukthitech.com/wrap" xmlns:f="http://autox.yukthitech.com/functions">
	<testSuite name="debug-flow-2">

		<testCase name="debug2_WithForLoop">
			<description>
				Test the debug flow when for loop is involved.
			</description>
			
			<s:set expression="res" value=""/>
		
			<s:for start="1" end="6">
				<s:if condition="attr.loopVar % 2 != 0">
					<s:continue/>
				</s:if>
			
				<s:set expression="res" value="${attr.res}|${attr.loopVar}"/>
			
				<s:if condition="attr.loopVar gte 4">
					<s:break/>
				</s:if>
			</s:for>
		
			<s:assert-equals actual="attr: res" expected="|2|4"/>
		</testCase>

		<function name="fetchProductOf10">
			<s:if condition="param.input == 1">
				<s:return value="int: 10"/>
			</s:if>
			<s:else-if condition="param.input == 2">
				<s:return value="int: 20"/>
			</s:else-if>
			<s:else>
				<s:return value="int: 100"/>
			</s:else>
		</function>

		<testCase name="debug2_ifElse">
			<description>
				Tests if condition blocks stacked next to each other.
			</description>
		
			<f:fetchProductOf10 input="int: 2" return-attr="prodVal"/>
			<f:fetchProductOf10 input="int: 3" return-attr="prodVal"/>
		</testCase>

		<function name="filterEvent">
			<s:if condition="param.input % 2 == 0">
				<s:return value="boolean: true"/>
			</s:if>
			<s:else>
				<s:fail message="Not an even number"/>
			</s:else>
		</function>

		<testCase name="debug2_tryCatch">
			<description>
				Tests if condition blocks stacked next to each other.
			</description>
			
			<s:try>
				<f:filterEvent input="int: 4"/>
				<s:log message="No error"/>
			</s:try>
			<s:catch errorAttr="ex">
				<s:log message="An error occurred"/>
			</s:catch>
		
			<s:try>
				<f:filterEvent input="int: 3"/>
				<s:log message="No error"/>
			</s:try>
			<s:catch errorAttr="ex">
				<s:log message="An error occurred"/>
			</s:catch>

		</testCase>

	</testSuite>
</testData>